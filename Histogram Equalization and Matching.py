# -*- coding: utf-8 -*-
"""Assignment5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n8Sh9CL8glzZKm-NpjnaC38GpYfU4SqZ

creating histogram
"""

import matplotlib.pyplot as plt
import numpy as np
import cv2



def createhist(img, title, do_print):
  grayimg = img
  grayhist = np.zeros([256])
  for x_pixel in range(grayimg.shape[0]):
          for y_pixel in range(grayimg.shape[1]):
              pixel_value = int(grayimg[x_pixel, y_pixel])
              grayhist[pixel_value] += 1

  grayhist /= (grayimg.shape[0] * grayimg.shape[1])
  if do_print:
    print_histogram(grayhist, title)
  return grayhist

def print_histogram(histo, title):
    plt.title(title)
    plt.plot(histo, color='blue')
    plt.bar(np.arange(len(histo)),histo, color='pink')
    plt.ylabel('No. of Pixels')
    plt.xlabel('intensity')
    plt.show()
    print()
    return

"""Equalizing an histogram"""

def equalize_histogram(img, histo,title, do_print):
    equalizedhisto = np.zeros_like(histo)
    enhancedimg = np.zeros_like(img)

    for i in range(len(histo)):
        equalizedhisto[i] = int(np.sum(histo[:i+1])*255)

    for xpixel in range(img.shape[0]):
        for ypixel in range(img.shape[1]):
            pixelval = int(img[xpixel, ypixel])
            enhancedimg[xpixel, ypixel] = equalizedhisto[pixelval]


    fig, axes=plt.subplots(1, 2)
    axes[0].imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
    axes[0].set_title('original img :')
    axes[1].imshow(cv2.cvtColor(enhancedimg, cv2.COLOR_BGR2RGB))
    axes[1].set_title('enhanced img :')
    plt.show()
    print()

    if(do_print):
      print_histogram(equalizedhisto, title)
    return(equalizedhisto, enhancedimg)

"""Matching"""

def findtarget(histo, value):
  key=np.where(histo==value)

  if(len(key[0])==0):
    key=findtarget(histo, value+1)
    if(len(key[0])==0):
      key=findtarget(histo, value-1)

  return(key)


def matchhistogram(inputimg, inputhist, target_hist, title):
  transformedimg=np.zeros_like(inputimg)
  transformhist=np.zeros_like(inputhist)

  for i in range (len(inputhist)):
    transformhist[i]=findtarget(target_hist, inputhist[i])[0][0]

  for xpixel in range (inputimg.shape[0]):
    for ypixel in range (inputimg.shape[1]):
      intensity=int(inputimg[xpixel, ypixel])
      transformedimg[xpixel, ypixel]=transformhist[intensity]

  plt.imshow(cv2.cvtColor(transformedimg, cv2.COLOR_BGR2RGB))
  plt.title('Matched Image')
  plt.axis('off')
  plt.show()
  print()

  transformedhist=createhist(transformedimg, title, True)

image1=cv2.imread('grey_1.png', 0)
originalhist1=createhist(image1, 'original img hist', 1)
equalizedhist1, enhancedimg1=equalize_histogram(image1, originalhist1, 'Equalized Histogram', 1)
enhancedhist1=createhist(enhancedimg1, 'Enhanced Image Histogram ', 1)

img2=cv2.imread('grey_2.png', 0)
originalhist2=createhist(img2, 'orig img hist ', 1)
equalizedhist2, enhancedimg2=equalize_histogram(img2, originalhist2, 'Equalized Histogram', 1)
enhanced_img_hist2=createhist(enhancedimg2, 'enhanced img hist ', 1)

matchhistogram(image1, equalizedhist1, equalizedhist2, 'matched img hist')

img1=cv2.imread('grey_4.png', 0)
originalhist1=createhist(img1, 'original img hist', 1)
equalizedhist1, enhancedimg1=equalize_histogram(img1, originalhist1, 'Equalized Histogram ', 1)
enhancedhist1=createhist(enhancedimg1, 'Enhanced Image Histogram ', 1)

img2=cv2.imread('grey_3.png', 0)
originalhist2=createhist(img2, 'Original Image Histogram ', 1)
equalizedhist2, enhancedimg2=equalize_histogram(img2, originalhist2, 'Equalized Histogram ', 1)
enhanced_img_hist2=createhist(enhancedimg2, 'Enhanced Image Histogram ', 1)

matchhistogram(img1, equalizedhist1, equalizedhist2, 'Matched Image Histogram')

img1=cv2.imread('grey_2.png', 0)
originalhist1=createhist(img1, 'originial img hist', 1)
equalizedhist1, enhancedimg1=equalize_histogram(img1, originalhist1, 'Equalized Histogram ', 1)
enhancedhist1=createhist(enhancedimg1, 'Enhanced Image Histogram ', 1)

img2=cv2.imread('grey_4.png', 0)
originalhist2=createhist(img2, 'Original Image Histogram ', 1)
equalizedhist2, enhancedimg2=equalize_histogram(img2, originalhist2, 'Equalized Histogram ', 1)
enhanced_img_hist2=createhist(enhancedimg2, 'Enhanced Image Histogram ', 1)

matchhistogram(img1, equalizedhist1, equalizedhist2, 'Matched Image Histogram')

img1=cv2.imread('grey_3.png', 0)
originalhist1=createhist(img1, 'originial img hist', 1)
equalizedhist1, enhancedimg1=equalize_histogram(img1, originalhist1, 'Equalized Histogram', 1)
enhancedhist1=createhist(enhancedimg1, 'Enhanced Image Histogram ', 1)

img2=cv2.imread('grey_1.png', 0)
originalhist2=createhist(img2, 'Original Image Histogram ', 1)
equalizedhist2, enhancedimg2=equalize_histogram(img2, originalhist2, 'Equalized Histogram ', 1)
enhanced_img_hist2=createhist(enhancedimg2, 'Enhanced Image Histogram ', 1)

matchhistogram(img1, equalizedhist1, equalizedhist2, 'Matched Image Histogram')

img1=cv2.imread('imageA.png', 0)
originalhist1=createhist(img1, 'original img hist', 1)
equalizedhist1, enhancedimg1=equalize_histogram(img1, originalhist1, 'Equalized Histogram ', 1)
enhancedhist1=createhist(enhancedimg1, 'Enhanced Image Histogram ', 1)

img2=cv2.imread('imageB.png', 0)
originalhist2=createhist(img2, 'Original Image Histogram ', 1)
equalizedhist2, enhancedimg2=equalize_histogram(img2, originalhist2, 'Equalized Histogram ', 1)
enhanced_img_hist2=createhist(enhancedimg2, 'Enhanced Image Histogram ', 1)

matchhistogram(img1, equalizedhist1, equalizedhist2, 'Matched Image Histogram')